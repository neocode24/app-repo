# .github/workflows/ci-cd.yml
name: CI/CD 파이프라인

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'

env:
  ACR_NAME: acraz01edu01
  IMAGE_NAME: neocode24/myapp
  GITOPS_REPO: neocode24/gitops-repo
  GITOPS_APP_PATH: apps/myapp/overlays

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3
      
      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: 의존성 설치
        run: npm ci
      
      - name: 린트 검사
        run: npm run lint
      
      - name: 테스트 실행
        run: npm run test:unit
  
  build-and-push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    # PR이 아닌 경우에만 실행
    if: github.event_name != 'pull_request'
    
    permissions:
      contents: read
      id-token: write  # OIDC 인증을 위해 필요
    
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3
      
      - name: Azure 로그인
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: ACR 로그인
        run: az acr login --name ${{ env.ACR_NAME }}
      
      - name: Docker 메타데이터 설정
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Docker 빌드 및 푸시
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Notation 설치
        run: |
          curl -Lo notation.tar.gz https://github.com/notaryproject/notation/releases/download/v1.3.2/notation_1.3.2_linux_amd64.tar.gz
          tar xvzf notation.tar.gz
          sudo mv notation /usr/local/bin/

      - name: Notation Azure KV Plugin 설치
        run: |
          notation plugin install \
            --url https://github.com/Azure/notation-azure-kv/releases/download/v1.2.1/notation-azure-kv_1.2.1_linux_amd64.tar.gz \
            --sha256sum 67c5ccaaf28dd44d2b6572684d84e344a02c2258af1d65ead3910b3156d3eaf5

      - name: 서명 키 등록
        run: |
          # 인증서 다운로드
          az keyvault certificate download \
            --name notation-cert \
            --vault-name ${{ secrets.KEY_VAULT_NAME }} \
            --file notation-cert.pem

          # 키 ID 추출
          KEY_ID=$(az keyvault certificate show \
            --name notation-cert \
            --vault-name ${{ secrets.KEY_VAULT_NAME }} \
            --query 'kid' -o tsv)

          # 키 등록
          notation key add acr-key \
            --plugin azure-kv \
            --id $KEY_ID \
            --default \
            --plugin-config key_name=notation-cert \
            --plugin-config vault_name=${{ secrets.KEY_VAULT_NAME }}

      - name: 이미지 서명
        run: |
          notation sign --signature-format cose \
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}@${{ steps.meta.outputs.digest }} \
            --plugin azure-kv \
            --plugin-config self_signed=true \
            --plugin-config key_name=notation-cert \
            --plugin-config vault_name=${{ secrets.KEY_VAULT_NAME }}
      
      - name: 이미지 태그 저장
        id: image-tag
        run: echo "tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
  
  update-gitops-repo:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: GitOps 저장소 체크아웃
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GITOPS_PAT }}
          path: gitops
      
      - name: Kustomize 설치
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/
      
      - name: 이미지 태그 업데이트
        run: |
          cd gitops/${{ env.GITOPS_APP_PATH }}/dev
          kustomize edit set image ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ needs.build-and-push-image.outputs.tag }}
      
      - name: GitOps 저장소 커밋 및 푸시
        run: |
          cd gitops
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update ${{ env.IMAGE_NAME }} image to ${{ needs.build-and-push-image.outputs.tag }}"
          git push
  
  trigger-argocd-sync:
    needs: update-gitops-repo
    runs-on: ubuntu-latest
    
    steps:
      - name: ArgoCD 로그인
        run: |
          # ArgoCD CLI 설치
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/
          
          # ArgoCD 로그인
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
      
      - name: 애플리케이션 동기화
        run: |
          argocd app sync myapp
          argocd app wait myapp --health